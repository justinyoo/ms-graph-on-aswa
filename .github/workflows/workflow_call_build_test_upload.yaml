name: 'On Called for Doing Build & Test & Upload'

on:
  workflow_call:
    inputs:
      artifact_name_app:
        type: string
        required: false
        description: Artifact name for app
        default: 'app'
      artifact_name_api:
        type: string
        required: false
        description: Artifact name for API
        default: 'api'

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.x

    - name: Install SWA CLI
      shell: bash
      run: |
        npm install -g @azure/static-web-apps-cli

    - name: Restore NuGet packages
      shell: bash
      run: |
        dotnet restore

    - name: Build solution
      shell: bash
      run: |
        dotnet build -c Release

    - name: Test solution
      shell: bash
      run: |
        dotnet test -c Release

    - name: Create artifacts
      shell: bash
      run: |
        swa build

    - name: Login to Azure
      uses: Azure/login@v1
      with:
        # creds: ${{ secrets.AZURE_CREDENTIALS }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get SWA token
      shell: bash
      run: |
        swa_token=$(az staticwebapp secrets list -g $AZURE_RESOURCE_GROUP_NAME -n $AZURE_STTAPP_NAME --query "properties.apiKey" -o tsv)

        echo "::add-mask::$swa_token"
        echo "SWA_TOKEN=$swa_token" >> $GITHUB_ENV

    - name: Deploy SWA to Azure
      shell: bash
      run: |
        swa deploy \
            -d ${{ env.SWA_TOKEN }} \
            -i src/FunctionApp/bin/Release/net7.0/publish \
            --env default

    - name: Update app settings on SWA
      shell: bash
      run: |
        appsettings=$(az staticwebapp appsettings set \
          -g $AZURE_RESOURCE_GROUP_NAME \
          -n $AZURE_STTAPP_NAME \
          --setting-names MsGraph__TenantId="${{ secrets.GRAPH_TENANT_ID }}" \
                          MsGraph__ClientId="${{ secrets.GRAPH_CLIENT_ID }}" \
                          MsGraph__ClientSecret="${{ secrets.GRAPH_CLIENT_SECRET }}")

    # - name: Add app paths to env
    #   shell: pwsh
    #   run: |
    #     $appPath = "src/BlazorApp/bin/wwwroot"

    #     echo "APP_PATH=$appPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    # - name: Add API paths to env
    #   shell: pwsh
    #   run: |
    #     $apiPath = "src/FunctionApp/bin/Release/net7.0/publish"

    #     echo "API_PATH=$apiPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append

    # - name: Upload app artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: ${{ inputs.artifact_name_app }}
    #     path: "${{ github.workspace }}/${{ env.APP_PATH }}"
    #     retention-days: 3

    # - name: Upload API artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: ${{ inputs.artifact_name_api }}
    #     path: "${{ github.workspace }}/${{ env.API_PATH }}"
    #     retention-days: 3
